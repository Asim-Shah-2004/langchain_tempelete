transmission unit, MTU), and then setting the MSS to ensure that a TCP segment
(when encapsulated in an IP datagram) plus the TCP/IP header length (typically 40
bytes) will fit into a single link-layer frame. Both Ethernet and PPP link-layer protocols have an MSS of 1,500 bytes. Approaches have also been proposed for discovering the path MTU—the largest link-layer frame that can be sent on all links from
source to destination [RFC 1191]—and setting the MSS based on the path MTU
value. Note that the MSS is the maximum amount of application-layer data in the
segment, not the maximum size of the TCP segment including headers. (This terminology is confusing, but we have to live with it, as it is well entrenched.)
TCP pairs each chunk of client data with a TCP header, thereby forming TCP
segments. The segments are passed down to the network layer, where they are separately encapsulated within network-layer IP datagrams. The IP datagrams are then
sent into the network. When TCP receives a segment at the other end, the segment’s
data is placed in the TCP connection’s receive buffer, as shown in Figure 3.28. The
application reads the stream of data from this buffer. Each side of the connection has
its own send buffer and its own receive buffer. (You can see the online flow-control
applet at http://www.awl.com/kurose-ross, which provides an animation of the send
and receive buffers.)
We see from this discussion that a TCP connection consists of buffers, variables, and a socket connection to a process in one host, and another set of buffers,
variables, and a socket connection to a process in another host. As mentioned earlier, no buffers or variables are allocated to the connection in the network elements
(routers, switches, and repeaters) between the hosts.
3.5.2 TCP Segment Structure
Having taken a brief look at the TCP connection, let’s examine the TCP segment
structure. The TCP segment consists of header fields and a data field. The data
field contains a chunk of application data. As mentioned above, the MSS limits the
Process
writes data
Process
reads data
TCP
send
buffer
Socket
TCP
receive
buffer
Socket
Segment Segment
Figure 3.28  TCP send and receive buffers
234 CHAPTER 3 • TRANSPORT LAYER
maximum size of a segment’s data field. When TCP sends a large file, such as an
image as part of a Web page, it typically breaks the file into chunks of size MSS
(except for the last chunk, which will often be less than the MSS). Interactive applications, however, often transmit data chunks that are smaller than the MSS; for
example, with remote login applications like Telnet, the data field in the TCP segment is often only one byte. Because the TCP header is typically 20 bytes (12 bytes
more than the UDP header), segments sent by Telnet may be only 21 bytes in length.
Figure 3.29 shows the structure of the TCP segment. As with UDP, the header
includes source and destination port numbers, which are used for
multiplexing/demultiplexing data from/to upper-layer applications. Also, as with
UDP, the header includes a checksum field. A TCP segment header also contains
the following fields:
• The 32-bit sequence number field and the 32-bit acknowledgment number
field are used by the TCP sender and receiver in implementing a reliable data
transfer service, as discussed below.
• The 16-bit receive window field is used for flow control. We will see shortly that
it is used to indicate the number of bytes that a receiver is willing to accept.
• The 4-bit header length field specifies the length of the TCP header in 32-bit
words. The TCP header can be of variable length due to the TCP options field.
Source port #
Internet checksum
Header
length Unused
URG
ACK
PSH
RST
SYN
FIN
32 bits
Dest port #
Receive window
Urgent data pointer
Sequence number
Acknowledgment number
Options
Data
Figure 3.29  TCP segment structure
3.5 • CONNECTION-ORIENTED TRANSPORT: TCP 235
(Typically, the options field is empty, so that the length of the typical TCP header
is 20 bytes.)
• The optional and variable-length options field is used when a sender and
receiver negotiate the maximum segment size (MSS) or as a window scaling factor for use in high-speed networks. A time-stamping option is also defined. See
RFC 854 and RFC 1323 for additional details.
• The flag field contains 6 bits. The ACK bit is used to indicate that the value carried in the acknowledgment field is valid; that is, the segment contains an
acknowledgment for a segment that has been successfully received. The RST,
SYN, and FIN bits are used for connection setup and teardown, as we will discuss at the end of this section. Setting the PSH bit indicates that the receiver
should pass the data to the upper layer immediately. Finally, the URG bit is used
to indicate that there is data in this segment that the sending-side upper-layer
entity has marked as “urgent.” The location of the last byte of this urgent data is
indicated by the 16-bit urgent data pointer field. TCP must inform the receiving-side upper-layer entity when urgent data exists and pass it a pointer to the
end of the urgent data. (In practice, the PSH, URG, and the urgent data pointer
are not used. However, we mention these fields for completeness.)